#include <iostream>
using namespace std;

void merge1(int* Arr, int start, int mid, int end) {
	int * temp=new int[end - start + 1];
	int i = start, j = mid + 1, k = 0;

	while (i <= mid && j <= end) {
		if (Arr[i] <= Arr[j]) {
			temp[k] = Arr[i];
			k += 1; i += 1;
		}
		else {
			temp[k] = Arr[j];
			k += 1; j += 1;
		}
	}

	
	while (i <= mid) {
		temp[k] = Arr[i];
		k += 1; i += 1;
	}

	while (j <= end) {
		temp[k] = Arr[j];
		k += 1; j += 1;
	}

	for (i = start; i <= end; i += 1) {
		Arr[i] = temp[i - start];
	}
}

void mergeSort(int* Arr, int start, int end) {

	if (start < end) {
		int mid = (start + end) / 2;
		mergeSort(Arr, start, mid);
		mergeSort(Arr, mid + 1, end);
		merge1(Arr, start, mid, end);
	}
}
int main()
{
	int size;
	int * arr =new int[size];
	cout << "please enter size array";
	cin >> size;
	cout << "please enter elements of array";
	for (int i = 0; i < size; ++i) {
		cin >> arr[i];
	}
	 mergeSort(arr,0, size-1);
	 for (int i = 0; i < size; ++i) {
		 cout<< arr[i];
	 }
